version: 2.1

references:

  # Container environment

  container_config: &container_config
    docker:
      - image: cimg/android:2022.03

    working_directory: ~/grapes-android

    environment:
      _JAVA_OPTIONS: -Xmx4096m
      GRADLE_OPTS: -Dorg.gradle.daemon=false

  gradle_checksum_cache_key: &gradle_checksum_cache_key
    key: gradle-{{ checksum "build.gradle" }}-{{ checksum "library/build.gradle" }}-{{ checksum "library-compose/build.gradle" }}-{{ checksum "sample/build.gradle" }}-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "settings.gradle" }}

  # Branching

  branch_internal_release_only: &branch_internal_release_only
    filters:
      branches:
        only:
          - main

##
## COMMANDS
##

commands:

  restore-gradle-cache:
    description: Restore the cache of ~/.gradle based on the Gradle files.
    steps:
      - restore_cache:
          <<: *gradle_checksum_cache_key

  save-gradle-cache:
    description: Cache the content of ~/.gradle based on the Gradle files.
    steps:
      - save_cache:
          <<: *gradle_checksum_cache_key
          paths:
            - ~/.gradle

  attach-workspace-distribution:
    steps:
      - attach_workspace:
          at: sample

  download-keystore:
    steps:
      - run:
          name: Download keystore file from another place
          command: |
            echo "Downloading keystore..."

            sudo curl -H "Authorization: token ${GITHUB_KEYSTORE_URI_TOKEN}" -H "Accept: application/vnd.github.v3.raw" -o sample/spendesk-grapes.keystore -L ${GITHUB_KEYSTORE_URI}
            ls -l sample/

  store-apk-as-artifact:
    steps:
      - store_artifacts:
          path: sample/build/outputs/apk
          destination: apk

##
## JOBS
##

jobs:

  update_dependency_cache:
    <<: *container_config
    steps:
      - checkout
      - restore-gradle-cache
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save-gradle-cache

  build:
    <<: *container_config
    description: Build the APK for release buildType
    resource_class: large
    steps:
      - checkout
      - restore-gradle-cache
      - download-keystore
      - run:
          name: Build the release APK
          command: ./gradlew assembleRelease --no-daemon
      - store-apk-as-artifact
      - persist_to_workspace:
          root: sample
          paths:
            - build/outputs/apk/release

  deploy_app_distribution_internal_release:
    <<: *container_config
    description: Send the release app through Firebase App Distribution
    steps:
      - checkout
      - restore-gradle-cache
      - download-keystore
      - attach-workspace-distribution
      - run:
          name: Retrieve Firebase App distribution key from CI env
          command: |
            ls
            echo $FIREBASE_APP_DISTRIBUTION_PRIVATE_KEY > ./sample/spendesk-grapes-mobile-firebase-app-distribution.json
      - run:
          name: App Distribution Internal Release Deployment
          command: ./gradlew appDistributionUploadRelease

##
## Workflow
##

workflows:
  version: 2

  internal_release:
    jobs:
      - update_dependency_cache
      - build:
          requires:
            - update_dependency_cache
      - deploy_app_distribution_internal_release:
          <<: *branch_internal_release_only
          requires:
            - build
